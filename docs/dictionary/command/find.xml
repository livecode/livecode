<doc>
	<legacy_id>1136</legacy_id>
	<name>find</name>
	<type>command</type>

	<syntax>
		<example>find [<i>form</i>] <i>textToFind</i> [in <i>field</i>]</example>
		<example>find empty</example>
	</syntax>

	<synonyms>
	</synonyms>

	<summary>Searches the <glossary tag="field">fields</glossary> of the <glossary tag="current stack">current stack</glossary>.</summary>

	<examples>
<example>find "Note:"</example>
<example>find "Example" in field 1</example>
<example><p>find string "beat must go on" in field "Quotes"</p></example>
	</examples>

	<history>
		<introduced version="1.0">Added.</introduced>
		<deprecated version=""></deprecated>
		<removed version=""></removed>
		
		<experimental version=""></experimental>
		<nonexperimental version=""></nonexperimental>
	</history>

	<objects>
	</objects>

	<platforms>
		<mac/>
		<windows/>
		<linux/>
		<ios/>
		<android/>
	</platforms>

	<classes>
		<desktop/>
		<server/>
		<web/>
		<mobile/>
	</classes>

	<security>
	</security>


	<classification>
		<category>Database Operations</category>
	</classification>

	<references>
		<function tag="foundChunk">foundChunk Function</function>
		<function tag="foundField">foundField Function</function>
		<function tag="foundLine">foundLine Function</function>
		<function tag="foundLoc">foundLoc Function</function>
		<function tag="foundText">foundText Function</function>
		<function tag="matchText">matchText Function</function>
		<function tag="offset">offset Function</function>
		<command tag="mark">mark Command</command>
		<command tag="replace">replace Command</command>
		<command tag="unmark">unmark Command</command>
		<command tag="sort">sort Command</command>
		<property tag="caseSensitive">caseSensitive Property</property>
		<property tag="dontSearch">dontSearch Property</property>
		<property tag="mark">mark Property</property>
		<keyword tag="normal">normal Keyword</keyword>
		<keyword tag="characters">characters Keyword</keyword>
		<keyword tag="string">string Keyword</keyword>
		<keyword tag="whole">whole Keyword</keyword>
	</references>

	<description>
	<overview>Use the <b>find</b> <glossary tag="command">command</glossary> to search for text.</overview>

		<parameters>
<parameter>
<name>form</name>
<description>The form is one of the following words. If no form is specified, the find normal form is used.</description>
<options title="">
<option>
<item>normal</item>
<description></description>
</option>
<option>
<item>character or character (or char or chars)</item>
<description></description>
</option>
<option>
<item>word or words</item>
<description></description>
</option>
<option>
<item>string</item>
<description></description>
</option>
<option>
<item>whole</item>
<description></description>
</option>
</options>
</parameter>
<parameter>
<name>textToFind</name>
<description>The textToFind is any expression that evaluates to a string.</description>
</parameter>
<parameter>
<name>field</name>
<description>The field is any expression that evaluates to a field reference. If the field is not specified, the find command searches all the fields in the current stack (except fields whose dontSearch property is set to true).</description>
</parameter>		</parameters>

	<value></value>
	<comments>The find command starts searching after the previously-found text (if there was a previous find command) or at the beginning of the first field on the current card (if not).<p></p><p>When the search is successful, the card containing the text appears and a box is drawn around the found text. If the text is not found in the stack, the result function returns "Not found".</p><p></p><p>The six forms of the find command search in different ways. The,, andforms search for each word in the textToFind, but the words don't have to be together to be found; they only have to all appear on the same card. The  and forms look for complete words only. Theandforms search for the textToFind as a unit.</p><p></p><p>Theform looks for each word in the textToFind at the beginning of a word. For example,finds "ing" and "tower", but not "b" or "Camp". All the words you specify must be in fields on the card, but they don't need to be in the same order, or even in the same field.</p><p></p><p>Theform looks for each word in the textToFind, in any part of a word. Unlike theform, theform doesn't require that the words in the textToFind be found at the start of a word on the card. For example,finds "b", "ing", "tower", and "Camp". As with theform, all the words must be somewhere on the card, but they don't need to be in the same order, or in the same field.</p><p></p><p>Theform looks for each word in the textToFind. All the words must be complete words, not parts of words. For example,finds "ring" and "bell", but not "ing", "b", "tower", or "Camp". As with theandforms, all the words must be somewhere on the card, but they don't need to be in the same order, or in the same field.</p><p></p><p>Theform looks for the entire textToFind as a unit. Unlike the,, and  forms, theform requires that the textToFind be found exactly: the words must be in the same order and in the same field, and not separated by other words. For example,finds "ring bell" and "b tower", but not " the " (extra word between "ring" and "bell"), " Street" (no space between "ring" and "bell"), or " er" (words are in the wrong order).</p><p></p><p>Theform looks for the entire textToFind as a unit. Like theform (and unlike theform), theform requires that each word in the textToFind be found as a whole word, not part of a word. For example,finds "ring bell", but not "b tower" (the "ring" and "bell" are parts of words, not whole words), " the " (extra word between "ring" and "bell"), " Street" (no space between "ring" and "bell"), or " er" (words are in the wrong order).</p><p></p><p></p><p><note> Because the,, andforms search for words or portions of words, they cannot find a string containing a space. Theform can find a string containing a space, but cannot find a string that contains a returncharacter.</p><p></note><p>Theform of the find command removes the box from the last word found and resets the find command, so that the next search starts from the beginning of the current card, rather than the location of the next find. Going to another card also resets the find command.</p><p></p><p>The setting of the caseSensitive property determines whether the search considers uppercase and lowercase characters to be equivalent.</p><p></p><p></p><p><note> The search does not consider characters that differ by a diacritical mark to be equivalent. For example mére will not find the word "mere".</p><p></note><p>Usually, the offset and matchText functions are faster than the find command. But unlike these functions, the find command can search all the fields of a stack at once, instead of one container at a time.</p><p></p><p><tip> To perform a batch search, set the markproperty of all cards where a match is found by using theform of the mark command.</tip></comments>
	</description>
</doc>