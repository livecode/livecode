<doc>
  <legacy_id>3008</legacy_id>
  <name>libURLFollowHttpRedirects</name>
  <type>command</type>
  <syntax>
    <example>libURLFollowHttpRedirects &lt;true|false&gt;</example>
  </syntax>
  <library>Internet library</library>
  <objects>
  </objects>
  <synonyms>
  </synonyms>
  <classification>
  </classification>
  <references>
    <command tag="libURLDownloadToFile">libURLDownloadToFile Command</command>
    <function tag="libURLLastHTTPHeaders">libURLLastHTTPHeaders Function</function>
  </references>
  <history>
    <introduced version="1.1.1">Added.</introduced>
  </history>
  <platforms>
    <mac/>
    <windows/>
    <linux/>
  </platforms>
  <classes>
    <desktop/>
    <server/>
    <web/>
  </classes>
  <security>
    <network/>
  </security>
  <summary>Set this to true if you want libURL GET requests to follow HTTP redirects and GET the page that it is redirected to.</summary>
  <examples>
    <example>libURLFollowHttpRedirects (the cFollowRedirects of me)</example>
  </examples>
  <description>
    <p> When set to true (the default), libURL will respond to 301, 302, and 307 responses by trying to get the url listed in the Location header IF the original request was a GET (i.e not a post). It will respond to 303 responses by trying to GET the redirected url whatever the original request method. When set to false, no attempt is made to get the redirected url and the result will return "error" followed by the status code and message (e.g. error 302 found)</p><p/><p>(This is different from previous behavior whereby libURL always attempted to GET 301 and 302 redirects whatever the original request method, but didn't handle other responses.) </p>
  </description>
</doc>