Name: libURLSetLogField

Type: command

Syntax: libURLSetLogField <longFieldDescriptor> 

Syntax: libURLSetLogField "none"

Summary: Specifies a field for logging information about uploads and downloads.

Introduced: 1.1.1

OS: mac,windows,linux

Platforms: desktop,server,web

Security: network

Example:
libURLSetLogField "field 1"

Example:
libURLSetLogField(the cLogField of me)

Parameters:
longFieldDescriptor: 
fieldDescriptor: Any expression that evaluates to a field reference.>*Important:* The libURLSetLogField command does not accept direct field references. For example, the following statement causes an error message:   libURLSetLogField field "Log" -- CAN'T USE THIS FORM Instead, use a form that evaluates to a field reference, like this:
: libURLSetLogField the name of field "Log" -- use this form instead  libURLSetLogField ("field" && quote & "Log" & quote) -- or this

Description:
Use the <libURLSetLogField> <command> to <debug> file transfers.

>*Important:*  The <libURLSetLogField> <command> does not accept direct <object reference|field references>. For example, the following <statement> causes an error message:

  libURLSetLogField field "Log" -- CAN'T USE THIS FORM

Instead, use a form that evaluates to a field reference, like this:

  libURLSetLogField the name of field "Log" -- use this form instead
  libURLSetLogField ("field" && quote & "Log" & quote) -- or this

During ftp and <http> transfers, LiveCode logs the data sent from the <server>. If a log field has been set, this data is placed after the log <field|field's> contents.

To stop logging, use the following statement:

  libURLSetLogField "none"

>*Important:*  The <libURLSetLogField> <function> is part of the <Internet library>. To ensure that the <function> works in a <standalone application>, you must include this <LiveCode custom library|custom library> when you create your <standalone application|standalone>. In the Inclusions section of the <Standalone Application Settings> window, make sure "Internet Library" is selected in the list of script libraries.

>*Note:* When included in a <standalone application>, the <Internet library> is implemented as a hidden <group> and made available when the <group> receives its first <openBackground> message. During the first part of the <application|application's> startup process, before this <message> is sent, the <libURLSetLogField> <function> is not yet available. This may affect attempts to use this <function> in <startup>, <preOpenStack>, <openStack>, or <preOpenCardhandlers(message)> in the <main stack>. Once the <application> has finished starting up, the <library> is available and the <libURLSetLogField> <function> can be used in any <handler>.

References: ID (property), name (property), application (glossary), standalone application (glossary), debug (glossary), object reference (glossary), command (glossary), main stack (glossary), group (glossary), Standalone Application Settings (glossary), server (glossary), HTTP (glossary), message (glossary), statement (glossary), handler (glossary), startup (message), openBackground (message), preOpenStack (message), openStack (message), Internet library (library), library (library), LiveCode custom library (library), long (keyword), field (object), libURLErrorData (function), get (command), post (command), function (control_st)

Tags: networking
