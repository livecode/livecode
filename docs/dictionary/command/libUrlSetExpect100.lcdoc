Name: libURLSetExpect100

Type: command

Syntax: libURLSetExpect100 <limit> 

Summary: 

Introduced: 2.5

OS: mac,windows,linux

Platforms: desktop,server,web

Security: network

Parameters:
limit: 

Description:
<limit> is a number of bytes. 

When called, subsequent <POST> requests will add an "Expect: 100-continue" field to the http headers when the data to be posted excedes the limit. The data won't be written to the socket until a 100 Continue response is received from the server. 

This can be useful when posting large amounts of data and where there is a risk of the <POST> failing (because of failed authentication, or whatever). For example, if authentication is required, the data won't be written until after the authentication has cleared. 

>*Important:*  The <libURLSetExpect100> <command> is part of the <Internet library>. To ensure that the <keyword> works in a <standalone application>, you must include this <LiveCode custom library|custom library> when you create your <standalone application|standalone>. In the Inclusions section of the <Standalone Application Settings> window, make sure "Internet Library" is selected in the list of script libraries.

>*Note:* When included in a <standalone application>, the <Internet library> is implemented as a hidden <group> and made available when the <group> receives its first <openBackground> message. During the first part of the <application|application's> startup process, before this <message> is sent, the http <keyword> is not yet available. This may affect attempts to use this <keyword> in <startup>, <preOpenStack>, <openStack>, or <preOpenCard> <handler|handlers> in the <main stack>. Once the <application> has finished starting up, the <library> is available and the http <keyword> can be used in any <handler>.

References: URL (keyword), startup (message), openBackground (message), preOpenStack (message), openStack (message), preOpenCard (message), post (command), libURLMultipartFormData (function), libURLFormData (function), main stack (glossary), handler (glossary), Standalone Application Settings (glossary), message (glossary), group (glossary), standalone application (glossary), keyword (glossary), command (glossary), application (glossary), Internet library (library), LiveCode custom library (library), library (library)
