<doc>	<legacy_id></legacy_id>	<name>mobileControlSet</name>	<type>command</type>	<syntax>		<example>mobileControlSet <i>idOrName</i>, <i>property</i>, <i>value</i></example>	</syntax>	<synonyms>		<synonym>iphoneControlSet</synonym>	</synonyms>	<summary>Sets the properties of a native iOS or Android control.</summary>	<examples><example>mobileControlSet tControl, "visible", true</example><example>mobileControlSet "myFirstControl", "visible", true</example>	</examples>	<history>		<introduced version="4.6">Added</introduced>		<deprecated version=""></deprecated>		<removed version=""></removed>		<changed version="5.5.1">Updated for Android player, scroller, </changed><changed version="5.5.3">5.5.3</changed><changed version="5.5">Changed from iphoneControlSet -&gt; mobileControlSet and added Android browser support</changed><changed version="4.6.4">Updated the end playback parameter</changed><changed version="4.6.4">Added support for Multi-line Native Text Field</changed><changed version="6.7.1">Added support for iOS Voice Over  </changed>		<experimental version=""></experimental>		<nonexperimental version=""></nonexperimental>	</history>	<objects>		<iosScroller/>		<iosBrowser/>		<iosPlayer/>		<iosTextInput/>		<AndroidScroller/>		<AndroidBrowser/>		<AndroidPlayer/>	</objects>	<platforms>		<ios/>		<android/>	</platforms>	<classes>		<mobile/>	</classes>	<security>	</security>	<classification>	</classification>	<references>		<function tag="mobileControlGet">mobileControlGet function</function>		<function tag="mobileControlTarget">mobileControlTarget function</function>		<function tag="mobileControls">mobileControls function</function>		<command tag="mobileControlCreate">mobileControlCreate command</command>		<command tag="mobileControlDelete">mobileControlDelete command</command>		<command tag="mobileControlDo">mobileControlDo command</command>	</references>	<description>	<overview>Use the <b>mobileControlSet</b> command to set properties of a native mobile control created using <command tag="mobileControlCreate">mobileControlCreate</command>.</overview>		<parameters>  <parameter>    <name>idOrName</name>    <description>The id or name of the control.</description>  </parameter>  <parameter>    <name>property</name>    <description>The property to be set.</description>    <options title="Global properties (All native mobile controls)">      <option>        <item>rect</item>        <description>the bounds of the control, relative to the top-left of the card. For example "0,0,100,100".</description>      </option>      <option>        <item>visible</item>        <description>set to true or false to determine whether the control should be displayed.</description>      </option>      <option>        <item>alpha</item>        <description>set to a property between 0 and 255 to blend the control with any controls underneath it.</description>      </option>      <option>        <item>backgroundColor</item>        <description>Set to either a standard color name, or a string of the form red,green,blue or red,green,blue,alpha. Where the components are integers in the range 0 to 255.</description>      </option>    </options>    <options title="Global properties (All native iOS controls)">      <option>        <item>opaque</item>        <description>set to false if the control should be rendered with transparency. In particular, set this control to true if you set a backgroundColor that is not fully opaque.</description>      </option>      <option>        <item>ignoreVoiceOverSensitivity</item>        <description>set to true or false to determine whether the control should be accessible through Voice Over.</description>      </option>    </options>    <options title="Browser Specific Properties">      <option>        <item>URL</item>        <description>the URL to be loaded into the web-view.</description>      </option>      <option>        <item>autoFit (iOS Only)</item>        <description>set to true or false to determine whether the page is scaled to fit the rect of the control (wraps the scalesPageToFit property of UIWebView).</description>      </option>      <option>        <item>delayRequests (iOS Only)</item>        <description>set to true to cause the loadRequest message to be sent. Note: In this mode, web-pages that trigger sub-document loads (such as those containing iframes) do not load correctly.</description>      </option>      <option>        <item>dataDetectorTypes (iOS Only)</item>        <description>Use this property to specify the types of data that should be automatically converted to clickable URLs in the web-view. This property wraps the dataDetectorTypes property of UIWebView. It is specified as a comma-delimited list of one or more of the following properties:</description>        <values>          <value>            <name>phone number</name>            <description/>          </value>          <value>            <name>calendar event</name>            <description>iOS4.0+</description>          </value>          <value>            <name>link</name>            <description/>          </value>          <value>            <name>address</name>            <description>iOS4.0+</description>          </value>        </values>      </option>      <option>        <item>allowsInlinePlayback (iOS Only)</item>        <description>set to true if the web-view should allow media files to be played 'inline' in the page (wraps the allowsInlineMediaPlayback property of the UIWebView). This property is only available on iOS4.0 and later</description>      </option>      <option>        <item>mediaPlaybackRequiresUserAction (iOS Only)</item>        <description>set to false to allow media files to play automatically in the webview (wraps the mediaPlaybackRequiresUserAction property of the UIWebView). This property is only available on iOS4.0 and later.</description>      </option>      <option>        <item>scrollingEnabled</item>        <description>specifies whether or not the browser can be scrolled (boolean).</description>      </option>      <option>        <item>canBounce</item>        <description>determines whether the scroller 'bounces' when it hits the edge of the contentRect.</description>      </option>    </options>    <options title="Scroller Specific Properties">      <option>        <item>contentRect</item>        <description>The rectangle over which the scroller scrolls. This is distinct from the scroller's rect. The minimum/maximum values of the scroll properties (adjusted for the size of the scroller). This is a comma-separated list of four integers, describing a rectangle. For example "0,0,100,100".</description>      </option>      <option>        <item>hScroll</item>        <description>The horizontal scroll offset. This is an integer value ranging between the left and right of the contentRect, adjusting appropriately for the size of the scroller (i.e. contentRect.left to contentRect.right - rect.width).</description>      </option>      <option>        <item>vScroll</item>        <description>The vertical scroll offset. This is an integer value ranging between the top and bottom of the contentRect, adjusting appropriately for the size of the scroller (i.e. contentRect.top to contentRect.bottom - rect.height).</description>      </option>      <option>        <item>hIndicator</item>        <description>Determines whether the horizontal indicator should be displayed when scrolling (maps to the UIScrollView showsHorizontalScrollIndicator property). This is a boolean value.</description>      </option>      <option>        <item>vIndicator</item>        <description>Determines whether the vertical indicator should be displayed when scrolling (maps to the UIScrollView showsVerticalScrollIndicator property). This is a boolean value.</description>      </option>      <option>        <item>canBounce (iOS Only)</item>        <description>Determines whether the scroller 'bounces' when it hits the edge of the contentRect (maps to the UIScrollView bounces property). This is a boolean value.</description>      </option>      <option>        <item>canScrollToTop (iOS Only)</item>        <description>Determines whether a touch on the status bar causes the scroll to scroll to the top (maps to the UIScrollView scrollsToTop property). This is a boolean value.</description>      </option>      <option>        <item>canCancelTouches (iOS Only)</item>        <description>Determines whether the scroller is allowed to cancel a touch that has been passed through to the underlying controls when it thinks it is a scroll gesture (maps to the UIScrollView canCancelContentTouches property).</description>      </option>      <option>        <item>delayTouches (iOS Only)</item>        <description>Determines whether the scroller delays passing on touch-down events until it has determined whether it is the start of a scroll gesture or not (maps to the UIScrollView delaysContentTouches property). This is a boolean value.</description>      </option>      <option>        <item>pagingEnabled (iOS Only)</item>        <description>Determines whether scrolling stops on multiples of the scroller's bounds (maps to the UIScrollView pagingEnabled property). This is a boolean value.</description>      </option>      <option>        <item>decelerationRate (iOS Only)</item>        <description>Determines the rate at which scrolling decelerates when a finger is lifted (maps to the UIScrollView decelerationRate property). This can be either normal, fast or a real number*. Setting the real number currently has little effect above the 'fast' and 'normal' settings. While iOS accepts any real number, it translates the number to one of those two settings.</description>      </option>      <option>        <item>indicatorStyle (iOS Only)</item>        <description>Determines the style of indicators to display (maps to the UIScrollView indicatorStyle property).</description>        <values>          <value>            <name>default</name>            <description/>          </value>          <value>            <name>white</name>            <description/>          </value>          <value>            <name>black</name>            <description/>          </value>        </values>      </option>      <option>        <item>indicatorInsets (iOS Only)</item>        <description>Determines how far from the edge of the scroller's bounds, the indicators are inset (maps to the UIScrollView scrollIndicatorInsets property). This is a comma-separated list of four integers, describing the left, top, right and bottom inset distances. For example "0,0,100,100".</description>      </option>      <option>        <item>scrollingEnabled (iOS Only)</item>        <description>Determines whether touches on the scroller cause scrolling (maps to the UIScrollView scrollEnabled property). This is a boolean value.</description>      </option>      <option>        <item>lockDirection (iOS Only)</item>        <description>Determines whether scrolling is locked to the initial direction a drag occurs in (maps to the UIScrollView directionalLockEnabled property). This is a boolean value.</description>      </option>    </options>    <options title="Player Specific Properties">      <option>        <item>filename</item>        <description>The filename of URL of the media to play. Setting the filename of the player automatically 'prepares' the movie for playback.</description>      </option>      <option>        <item>showController</item>        <description>Determines whether the controller is displayed over the content. This is a boolean value.</description>      </option>      <option>        <item>currentTime</item>        <description>The current position of the playhead, measured in milliseconds (maps to the native currentPlaybackTime property). This is an integer value.</description>      </option>      <option>        <item>looping</item>        <description>Determines whether the playback of the movie should loop indefinitely. This is a boolean value.</description>      </option>      <option>        <item>fullscreen (iOS Only)</item>        <description>Determines whether the player's content is played fullscreen. This is a boolean value.</description>      </option>      <option>        <item>preserveAspect (iOS Only)</item>        <description>Determines whether the player's content should preserve its aspect ratio when scaled to fit within the control's bounds. This is a boolean value.</description>      </option>      <option>        <item>useApplicationAudioSession (iOS Only)</item>        <description>Determines whether the movie uses a system-supplied audio session or not (maps to the native useApplicationAudioSession property). This is a boolean value.</description>      </option>      <option>        <item>shouldAutoplay (iOS Only)</item>        <description>Determines whether the playback of network-based content begins automatically when there is enough buffered data to ensure uninterrupted playback (maps to the native shouldAutoplay property). This is a boolean value.</description>      </option>      <option>        <item>allowsAirPlay (iOS Only)</item>        <description>Determines whether a control should be presented to allow the user to choose AirPlay-enabled hardware for playback (maps to the native allowsAirPlay property). This is a boolean value. This property is only supported on iOS 4.3 and later.</description>      </option>      <option>        <item>playableDuration (iOS Only)</item>        <description>The amount of currently playable content, measured in milliseconds (maps to the native playableDuration property). This is an integer value.</description>      </option>      <option>        <item>startTime (iOS Only)</item>        <description>The position at which playback should start, measured in milliseconds (maps to the native initialPlaybackTime property). This is an integer value.</description>      </option>      <option>        <item>endTime (iOS Only)</item>        <description>The position at which playback should end, measured in milliseconds (maps to the native endPlaybackTime property). This is an integer value. Set to -1 to make the video to play to the end.</description>      </option>      <option>        <item>playRate (iOS Only)</item>        <description>The current playback rate for the player (maps to the native currentPlaybackRate property). This represents a multiplier for the default playback rate of the current content. A value of 0.0 indicates playback is stopped, while a value of 1.0 indicates normal speed. Positive values indicate forward playback, while negative values indicate reverse playback. This is real value.</description>      </option>    </options>    <options title="Text Input Specific Properties">      <option>        <item>text</item>        <description>The content of the control (maps to the native text property). This is a string value.</description>      </option>      <option>        <item>unicodeText</item>        <description>The content of control encoded as UTF-16 (maps to the native text property). This is a binary value.</description>      </option>      <option>        <item>textColor</item>        <description>The color to use for the text in control (maps to the native textColor property). This is either a standard color name, or a string of the form red,green,blue or red,green,blue,alpha. Where the components are integers in the range 0 to 255.</description>      </option>      <option>        <item>fontName (iOS only)</item>        <description>The name of the font to use for text in the control. This is a string value.</description>      </option>      <option>        <item>fontSize</item>        <description>The size of the font to use for text in the control. This is an integer value.</description>      </option>      <option>        <item>textAlign</item>        <description>The alignment to use for text in the control (maps to the native textAlignment property). One of:</description>        <values>          <value>            <name>left</name>            <description/>          </value>          <value>            <name>center</name>            <description/>          </value>          <value>            <name>right</name>            <description/>          </value>        </values>      </option>      <option>        <item>autoFit (iOS only)</item>        <description>Determines whether the size of the text is scaled so that it fits within the width of the control down to the size specified by the minimumFontSize property (maps to the native adjustsFontSizeToFitWidth property). This is a boolean value.</description>      </option>      <option>        <item>minimumFontSize (iOS only)</item>        <description>The minimum size text should be shrunk to satisfy autoFit requirements (maps to the native minimumFontSize property). This is an integer value.</description>      </option>      <option>        <item>autoClear (iOS only)</item>        <description>Determines whether the control is emptied automatically when editing begins (maps to the native clearsOnBeginEditing property). This is a boolean.</description>      </option>      <option>        <item>clearButtonMode (iOS only)</item>        <description>The display mode of the standard 'clear' button overlay (maps to the native clearButtonMode property). This is one of the following:</description>        <values>          <value>            <name>never</name>            <description>never display the clear button</description>          </value>          <value>            <name>while editing</name>            <description>only display the clear button while editing</description>          </value>          <value>            <name>unless editing</name>            <description>only display the clear button when not editing</description>          </value>          <value>            <name>always</name>            <description>always display the clear button</description>          </value>        </values>      </option>      <option>        <item>borderStyle (iOS only)</item>        <description>The type of border to draw around the control (maps to the native borderStyle property). This is one of the following:</description>        <values>          <value>            <name>none</name>            <description>do not draw a border</description>          </value>          <value>            <name>line</name>            <description>draw a thin line around the control</description>          </value>          <value>            <name>bezel</name>            <description>draw a bezel-style border around the control</description>          </value>          <value>            <name>rounded</name>            <description>draw a rounded rectangle style border around the control</description>          </value>        </values>      </option>      <option>        <item>autoCapitalizationType</item>        <description>Determines when the shift-key is automatically enabled (maps to the native autocapitalizationType property). This is one of the following:</description>        <values>          <value>            <name>none</name>            <description>the shift-key is never automatically enabled</description>          </value>          <value>            <name>words</name>            <description>the shift-key is enabled at the start of words</description>          </value>          <value>            <name>sentences</name>            <description>the shift-key is enabled at the start of sentences</description>          </value>          <value>            <name>all characters</name>            <description>the shift-key is enabled at the start of each character</description>          </value>        </values>      </option>      <option>        <item>autoCorrectionType</item>        <description>Determines whether auto-correct behavior should be enabled (maps to the native autocorrectionType property). This is one of the following:</description>        <values>          <value>            <name>default</name>            <description>use the appropriate auto-correct behavior for the current script system</description>          </value>          <value>            <name>no</name>            <description>disable auto-correct behavior</description>          </value>          <value>            <name>yes</name>            <description>enable auto-correct behavior</description>          </value>        </values>      </option>      <option>        <item>manageReturnKey (iOS only)</item>        <description>Determines whether the return key should be automatically enabled or disabled based on whether the control has content or not (maps to the native enablesReturnKeyAutomatically property). This is a boolean value.</description>      </option>      <option>        <item>keyboardStyle (iOS only)</item>        <description>Determines what kind of appearance the keyboard has (maps to the native keyboardAppearance property). This is one of the following:</description>        <values>          <value>            <name>default</name>            <description>the standard keyboard appearance</description>          </value>          <value>            <name>alert</name>            <description>the keyboard that is suitable for an alert panel (iPhone/iPod only)</description>          </value>        </values>      </option>      <option>        <item>keyboardType</item>        <description>Determines what kind of keyboard should be displayed (maps to the native keyboardType property). This is one of the following:</description>        <values>          <value>            <name>default</name>            <description>the normal keyboard</description>          </value>          <value>            <name>alphabet</name>            <description>the alphabetic keyboard</description>          </value>          <value>            <name>numeric</name>            <description>the numeric keyboard with punctuation</description>          </value>          <value>            <name>URL</name>            <description>the URL entry keyboard</description>          </value>          <value>            <name>number</name>            <description>the number pad keyboard</description>          </value>          <value>            <name>phone</name>            <description>the phone number pad keyboard</description>          </value>          <value>            <name>contact</name>            <description>the phone contact pad keyboard</description>          </value>          <value>            <name>email</name>            <description>the email keyboard</description>          </value>          <value>            <name>decimal</name>            <description>the decimal numeric pad keyboard (iOS 4.1+)</description>          </value>        </values>      </option>      <option>        <item>returnKeyType</item>        <description>Determines what kind of return-key the keyboard should have (maps to the native returnKeyType property). This is one of the following:</description>        <values>          <value>            <name>default</name>            <description>the normal return key</description>          </value>          <value>            <name>go</name>            <description>the 'Go' return key</description>          </value>          <value>            <name>google</name>            <description>the 'Google' return key</description>          </value>          <value>            <name>join</name>            <description>the 'Join' return key</description>          </value>          <value>            <name>next</name>            <description>the 'Next' return key</description>          </value>          <value>            <name>route</name>            <description>the 'Route' return key</description>          </value>          <value>            <name>search</name>            <description>the 'Search' return key</description>          </value>          <value>            <name>send</name>            <description>the 'Send' return key</description>          </value>          <value>            <name>yahoo</name>            <description>the 'Yahoo' return key</description>          </value>          <value>            <name>done</name>            <description>the 'Done' return key</description>          </value>          <value>            <name>emergency call</name>            <description>the 'emergency call' return key</description>          </value>        </values>      </option>      <option>        <item>contentType</item>        <description>Determines what kind of content the control contains. This is one of the following:</description>        <values>          <value>            <name>plain</name>            <description>plain, unstyled text</description>          </value>          <value>            <name>password</name>            <description>plain text displayed in the standard iOS password style</description>          </value>        </values>      </option>      <option>        <item>enabled</item>        <description>Determines whether the control is enabled or not. This is a boolean value.</description>      </option>      <option>        <item>multiline (Android only)</item>        <description>A boolean value which determines whether the control can contain multiple lines of text, wraps text to fit horizontally, and scrolls vertically. If false, the field contains a single line of text which can scroll horizontally.</description>      </option>    </options>    <options title="Multi-line Text Input Specific Properties">      <option>        <item>text</item>        <description>The content of the control (maps to the native text property). This is a string value.</description>      </option>      <option>        <item>unicodeText</item>        <description>The content of control encoded as UTF-16 (maps to the native text property). This is a binary value.</description>      </option>      <option>        <item>textColor</item>        <description>The color to use for the text in control (maps to the native textColor property). This is either a standard color name, or a string of the form red,green,blue or red,green,blue,alpha. Where the components are integers in the range 0 to 255.</description>      </option>      <option>        <item>fontName (iOS only)</item>        <description>The name of the font to use for text in the control. This is a string value.</description>      </option>      <option>        <item>fontSize</item>        <description>The size of the font to use for text in the control. This is an integer value.</description>      </option>      <option>        <item>textAlign</item>        <description>The alignment to use for text in the control (maps to the native textAlignment property). One of:</description>        <values>          <value>            <name>left</name>            <description/>          </value>          <value>            <name>center</name>            <description/>          </value>          <value>            <name>right</name>            <description/>          </value>        </values>      </option>      <option>        <item>autoCapitalizationType</item>        <description>Determines when the shift-key is automatically enabled (maps to the native autocapitalizationType property). This is one of the following:</description>        <values>          <value>            <name>none</name>            <description>the shift-key is never automatically enabled</description>          </value>          <value>            <name>words</name>            <description>the shift-key is enabled at the start of words</description>          </value>          <value>            <name>sentences</name>            <description>the shift-key is enabled at the start of sentences</description>          </value>          <value>            <name>all characters</name>            <description>the shift-key is enabled at the start of each character</description>          </value>        </values>      </option>      <option>        <item>autoCorrectionType</item>        <description>Determines whether auto-correct behavior should be enabled (maps to the native autocorrectionType property). This is one of the following:</description>        <values>          <value>            <name>default</name>            <description>use the appropriate auto-correct behavior for the current script system</description>          </value>          <value>            <name>no</name>            <description>disable auto-correct behavior</description>          </value>          <value>            <name>yes</name>            <description>enable auto-correct behavior</description>          </value>        </values>      </option>      <option>        <item>manageReturnKey (iOS only)</item>        <description>Determines whether the return key should be automatically enabled or disabled based on whether the control has content or not (maps to the native enablesReturnKeyAutomatically property). This is a boolean value.</description>      </option>      <option>        <item>keyboardStyle (iOS only)</item>        <description>Determines what kind of appearance the keyboard has (maps to the native keyboardAppearance property). This is one of the following:</description>        <values>          <value>            <name>default</name>            <description>the standard keyboard appearance</description>          </value>          <value>            <name>alert</name>            <description>the keyboard that is suitable for an alert panel (iPhone/iPod only)</description>          </value>        </values>      </option>      <option>        <item>keyboardType</item>        <description>Determines what kind of keyboard should be displayed (maps to the native keyboardType property). This is one of the following:</description>        <values>          <value>            <name>default</name>            <description>the normal keyboard</description>          </value>          <value>            <name>alphabet</name>            <description>the alphabetic keyboard</description>          </value>          <value>            <name>numeric</name>            <description>the numeric keyboard with punctuation</description>          </value>          <value>            <name>URL</name>            <description>the URL entry keyboard</description>          </value>          <value>            <name>number</name>            <description>the number pad keyboard</description>          </value>          <value>            <name>phone</name>            <description>the phone number pad keyboard</description>          </value>          <value>            <name>contact</name>            <description>the phone contact pad keyboard</description>          </value>          <value>            <name>email</name>            <description>the email keyboard</description>          </value>          <value>            <name>decimal</name>            <description>the decimal numeric pad keyboard (iOS 4.1+)</description>          </value>        </values>      </option>      <option>        <item>returnKeyType</item>        <description>Determines what kind of return-key the keyboard should have (maps to the native returnKeyType property). This is one of the following:</description>        <values>          <value>            <name>default</name>            <description>the normal return key</description>          </value>          <value>            <name>go</name>            <description>the 'Go' return key</description>          </value>          <value>            <name>google</name>            <description>the 'Google' return key</description>          </value>          <value>            <name>join</name>            <description>the 'Join' return key</description>          </value>          <value>            <name>next</name>            <description>the 'Next' return key</description>          </value>          <value>            <name>route</name>            <description>the 'Route' return key</description>          </value>          <value>            <name>search</name>            <description>the 'Search' return key</description>          </value>          <value>            <name>send</name>            <description>the 'Send' return key</description>          </value>          <value>            <name>yahoo</name>            <description>the 'Yahoo' return key</description>          </value>          <value>            <name>done</name>            <description>the 'Done' return key</description>          </value>          <value>            <name>emergency call</name>            <description>the 'emergency call' return key</description>          </value>        </values>      </option>      <option>        <item>contentType</item>        <description>Determines what kind of content the control contains. This is one of the following:</description>        <values>          <value>            <name>plain</name>            <description>plain, unstyled text</description>          </value>          <value>            <name>password</name>            <description>plain text displayed in the standard iOS password style</description>          </value>        </values>      </option>      <option>        <item>editable</item>        <description>Determines if the text field can be edited. This is one of the following:</description>        <values>          <value>            <name>false</name>            <description>the text field cannot be edited</description>          </value>          <value>            <name>true</name>            <description>the text field can be edited</description>          </value>        </values>      </option>      <option>        <item>dataDetectorTypes</item>        <description>Determines what types of data should be detected and automatically converted to clikckable URLs. This is a comma delimited list of none or more of the following:</description>        <values>          <value>            <name>phone number</name>            <description/>          </value>          <value>            <name>calendar event</name>            <description>iOS4.0+</description>          </value>          <value>            <name>link</name>            <description/>          </value>          <value>            <name>address</name>            <description>iOS4.0+</description>          </value>        </values>      </option>      <option>        <item>selectedRange</item>        <description>Determines the start index and the length of the text that is to appear as selected.</description>      </option>      <option>        <item>contentRect (iOS only)</item>        <description>This value cannot be set. It isIs read-only for the multi-line text input control, as it is automatically set to contain the text.</description>      </option>      <option>        <item>hScroll (iOS only)</item>        <description>The horizontal scroll offset. This is an integer value ranging between the left and right of the contentRect, adjusting appropriately for the size of the scroller (i.e. contentRect.left to contentRect.right - rect.width).</description>      </option>      <option>        <item>vScroll (iOS only)</item>        <description>The vertical scroll offset. This is an integer value ranging between the top and bottom of the contentRect, adjusting appropriately for the size of the scroller (i.e. contentRect.top to contentRect.bottom - rect.height).</description>      </option>      <option>        <item>canBounce (iOS only)</item>        <description>Determines whether the scroller 'bounces' when it hits the edge of the contentRect (maps to the UIScrollView bounces property). This is a boolean value.</description>      </option>      <option>        <item>canScrollToTop (iOS only)</item>        <description>Determines whether a touch on the status bar causes the scroll to scroll to the top (maps to the UIScrollView scrollsToTop property). This is a boolean value.</description>      </option>      <option>        <item>canCancelTouches (iOS only)</item>        <description>Determines whether the scroller is allowed to cancel a touch that has been passed through to the underlying controls when it thinks it is a scroll gesture (maps to the UIScrollView canCancelContentTouches property).</description>      </option>      <option>        <item>delayTouches (iOS only)</item>        <description>Determines whether the scroller delays passing on touch-down events until it has determined whether it is the start of a scroll gesture or not (maps to the UIScrollView delaysContentTouches property). This is a boolean value.</description>      </option>      <option>        <item>pagingEnabled (iOS only)</item>        <description>Determines whether scrolling stops on multiples of the scroller's bounds (maps to the UIScrollView pagingEnabled property). This is a boolean value.</description>      </option>      <option>        <item>decelerationRate (iOS only)</item>        <description>Determines the rate at which scrolling decelerates when a finger is lifted (maps to the UIScrollView decelerationRate property). This can be either normal, fast or a real number.</description>      </option>      <option>        <item>indicatorStyle (iOS only)</item>        <description>Determines the style of indicators to display (maps to the UIScrollView indicatorStyle property).</description>        <values>          <value>            <name>default</name>            <description/>          </value>          <value>            <name>white</name>            <description/>          </value>          <value>            <name>black</name>            <description/>          </value>        </values>      </option>      <option>        <item>indicatorInsets (iOS only)</item>        <description>Determines how far from the edge of the scroller's bounds, the indicators are inset (maps to the UIScrollView scrollIndicatorInsets property). This is a comma-separated list of four integers, describing the left, top, right and bottom inset distances. For example "0,0,100,100".</description>      </option>      <option>        <item>scrollingEnabled</item>        <description>Determines whether touches on the scroller cause scrolling (maps to the UIScrollView scrollEnabled property). This is a boolean value.</description>      </option>      <option>        <item>hIndicator (iOS only)</item>        <description>Determines whether the horizontal indicator should be displayed when scrolling (maps to the UIScrollView showsHorizontalScrollIndicator property). This is a boolean value.</description>      </option>      <option>        <item>vIndicator (iOS only)</item>        <description>Determines whether the vertical indicator should be displayed when scrolling (maps to the UIScrollView showsVerticalScrollIndicator property). This is a boolean value.</description>      </option>      <option>        <item>lockDirection (iOS only)</item>        <description>Determines whether scrolling is locked to the initial direction a drag occurs in (maps to the UIScrollView directionalLockEnabled property). This is a boolean value.</description>      </option>      <option>        <item>enabled (iOS only)</item>        <description>Determines whether the control is enabled or not. This is a boolean value.</description>      </option>      <option>        <item>multiline (Android only)</item>        <description>A boolean value which determines whether the control can contain multiple lines of text, wraps text to fit horizontally, and scrolls vertically. If false, the field contains a single line of text which can scroll horizontally.</description>      </option>    </options>  </parameter>  <parameter>    <name>value</name>    <description>The value to set the property to.</description>  </parameter>		</parameters>	<value></value>	<comments>When setting the "ignoreVoiceOverSensitivity" property of a native iOS control to "true", then this control can interact with Voice Over. Remember to set this property back to "false" when this control is no longer on the current view.</comments>	</description></doc>