<doc>
  <legacy_id>2306</legacy_id>
  <name>request</name>
  <type>command</type>
  <syntax>
    <example>request <i>expression</i> {of | from} {program | application} <i>programAddress</i></example>
  </syntax>
  <library></library>
  <objects>
  </objects>
  <synonyms>
  </synonyms>
  <classification>
    <category>The System Environment</category>
    <category>Networks &amp; Communication</category>
  </classification>
  <references>
    <command tag="send to program">send to program Command</command>
  </references>
  <history>
    <introduced version="1.0">Added.</introduced>
  </history>
  <platforms>
    <mac/>
  </platforms>
  <classes>
    <desktop/>
    <server/>
  </classes>
  <security>
  </security>
  <summary>The <b>request</b> data gets information from another application via <glossary tag="Apple Event">Apple events</glossary>.</summary>
  <examples>
    <example>request "the hilite of button 3" from program "HyperCard"</example>
    <example>request field "Appname" from program "Ozone:Geek Paradise:FileMaker"</example>
  </examples>
  <description>
    <p>Use the <b>request</b> <glossary tag="command">command</glossary> to obtain data from another application via the <code>eval</code> <glossary tag="Apple Event">Apple event</glossary>.</p><p/><p><b>Parameters:</b></p><p>The <i>expression</i> is the <keyword tag="string">string</keyword> you're asking the other application to <glossary tag="evaluate">evaluate</glossary>. Its exact <function tag="format">format</function> and meaning depends on the other application.</p><p/><p>The <i>programAddress</i> is the AppleTalk address of the other program. The AppleTalk address consists of three parts, separated by colons: the zone the other computer is in, the name of the computer, and the name of the target program. If the other computer is in the same zone as yours, you can omit the zone. If the other program is running on the same computer, you can omit both the zone and the computer name.</p><p/><p><b>Comments:</b></p><p>The <b>request</b> <glossary tag="command">command</glossary> sends an<code>eval</code> <glossary tag="Apple Event">Apple event</glossary> to the <i>programAddress</i>. If the program supports this <glossary tag="Apple Event">Apple event</glossary>, it evaluates the expression and sends the result back to LiveCode, which places it in the <keyword tag="it">it</keyword> <glossary tag="variable">variable</glossary>.</p><p/><p>If the program sends back an error message, it is placed in the <b>result</b> <control_st tag="function">function</control_st>.</p><p/><p>For more information about Apple events, see Apple Computer's technical documentation, <i>Inside Macintosh: Interapplication Communication</i>, located at &lt;<u>http://developer.apple.com/techpubs/mac/IAC/IAC-2.html</u>&gt;.</p>
  </description>
</doc>