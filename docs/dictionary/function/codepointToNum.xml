<doc>
	<legacy_id></legacy_id>
	<name>codepointToNum</name>
	<type>function</type>

	<syntax>
		<example>codepointToNum(<i>unicodeCodepoint</i>)</example>
	</syntax>

	<synonyms>
	</synonyms>

	<summary>Converts a Unicode codepoint to an integer.</summary>

	<examples>
<example>get codepointToNum("A") </example>
<example>put codepointToNum(space) is 0x20</example>
<example><p>get codepointToNum(codepoint 1 of field "data")</p></example>
	</examples>

	<history>
		<introduced version="7.0">Added.</introduced>
		<deprecated version=""></deprecated>
		<removed version=""></removed>
		
		<experimental version=""></experimental>
		<nonexperimental version=""></nonexperimental>
	</history>

	<objects>
	</objects>

	<platforms>
		<mac/>
		<windows/>
		<linux/>
		<ios/>
		<android/>
	</platforms>

	<classes>
		<desktop/>
		<server/>
		<web/>
		<mobile/>
	</classes>

	<security>
	</security>


	<classification>
	</classification>

	<references>
		<function tag="numToCodepoint">numToCodepoint function</function>
		<function tag="numToNativeChar">numToNativeChar function</function>
		<function tag="nativeCharToNum">nativeCharToNum function</function>
		<function tag="normalizeText">normalizeText function</function>
		<function tag="codepointProperty">codepointProperty function</function>
	</references>

	<description>
	<overview>Use the <b>codepointToNum</b> function to translate a Unicode codepoint to its integer represntation.</overview>

		<parameters>
  <parameter>
    <name>unicodeCodepoint</name>
    <description>A single Unicode codepoint</description>
  </parameter>		</parameters>

	<value>The <b>codepointToNum</b> function returns an integer in the range 0x000000 to 0x10FF that identifies the given character.</value>
	<comments>The <b>codepointToNum</b> function takes a Unicode codepoint and returns its integer vaalue.<p></p><p>The <b>codepointToNum</b> function raises an exception if the argument contains multiple codepoints; it should generally be used in the form:</p><p></p><p>codepointToNum(codepoint x of string)</p><p></p><p>Codepoints that are not currently assigned to characters by the latest Unicode standard are not considered to be invalid in order to ensure compatibility with future standards.</p></comments>
	</description>
</doc>