<doc>
	<legacy_id></legacy_id>
	<name>iphoneDeviceResolution</name>
	<type>function</type>

	<syntax>
		<example>iphoneDeviceResolution()</example>
	</syntax>

	<synonyms>
	</synonyms>

	<summary>Returns the device's screen resolution in pixels</summary>

	<examples>
<example>put iphoneDeviceResolution() into tScreenResolution</example>
	</examples>

	<history>
		<introduced version="4.5.2">Added.</introduced>
		<deprecated version=""></deprecated>
		<removed version=""></removed>
		<changed version=""></changed>
	</history>

	<objects>
	</objects>

	<platforms>
		<ios/>
	</platforms>

	<classes>
		<mobile/>
	</classes>

	<security>
	</security>


	<classification>
	</classification>

	<references>
		<function tag="iphoneDeviceScale">iphoneDeviceScale Function</function>
		<command tag="iphoneUseDeviceResolution">iphoneUseDeviceResolution Command</command>
	</references>

	<description>
	<overview>Use the <b>iphoneDeviceResolution</b> function to find the resolution of the device's screen in pixels</overview>

		<parameters>
		</parameters>

	<value>The <b>iphoneDeviceResolution</b> function returns a string of the form <i>width, height</i> - with the values given in pixels.</value>
	<comments>The <b>iphoneDeviceResolution</b> function returns the resolution of the device's screen in pixels.<p></p><p>The new iPhone 4 has a display with double the resolution in both horizontal and vertical directions. By default, iOS handles this by mapping one logical 'point' to two physical 'pixels' with applications (LiveCode included) interpreting everything in terms of logical points. This means that apps targetted for older devices will run identically on the newer iPhone 4 devices.</p><p></p><p>The <function tag="screenRect">screenRect</function> and associated properties all deal in logical points, they do not reflect the actual device resolution at which the app is being displayed. To fetch the device screen's resolution in pixels use the <b>iphoneDeviceResolution</b> function.</p></comments>
	</description>
</doc>