<doc>
	<legacy_id></legacy_id>
	<name>mobilePixelDensity</name>
	<type>function</type>

	<syntax>
		<example>mobilePixelDensity()</example>
	</syntax>

	<synonyms>
	</synonyms>

	<summary>Returns the pixel density of the device screen (relative to a non-Retina display)</summary>

	<examples>
<example>put mobilePixelDensity() into theScaleFactor</example>
	</examples>

	<history>
		<introduced version="5.5.3">Added.</introduced>
		<deprecated version=""></deprecated>
		<removed version=""></removed>
		<changed version=""></changed>
	</history>

	<objects>
	</objects>

	<platforms>
		<ios/>
		<android/>
	</platforms>

	<classes>
		<mobile/>
	</classes>

	<security>
	</security>


	<classification>
	</classification>

	<references>
		<function tag="iphoneDeviceResolution">iphoneDeviceResolution Function</function>
		<function tag="iphoneDeviceScale">iphoneDeviceScale Function</function>
		<command tag="iphoneUseDeviceResolution">iphoneUseDeviceResolution Command</command>
	</references>

	<description>
	<overview>Use the <b>mobilePixelDensity</b> function to find the scale of the device screen relative to a non-Retinal display on iOS and the display metrics density on Android.</overview>

		<parameters>
		</parameters>

	<value>The <b>mobilePixelDensity</b> function returns<p> * 2 on a retina display (iOS)</p><p> * 1 otherwise (iOS)</p><p> * display metrics (Android)</p></value>
	<comments>The <b>mobilePixelDensity</b> function returns the scale of the device screen (relative to a non-Retinal display on iOS), this is 2 on a retina display and 1 otherwise. On Android this function return the Display Metrics.</comments>
	</description>
</doc>