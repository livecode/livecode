<doc>
	<legacy_id></legacy_id>
	<name>$_POST_BINARY</name>
	<type>keyword</type>

	<syntax>
	</syntax>

	<synonyms>
	</synonyms>

	<summary><b>$_POST_BINARY</b> is an array variable, formed from reading stdin and translating the url-form-encoded or multi-part-encoded data. </summary>

	<examples>
<example>put $_POST_BINARY into tPOSTArray</example>
<example>put uniEncode($_POST_BINARY[&quot;name&quot;],&quot;UTF8&quot;) into tUnicodeName</example>
	</examples>

	<history>
		<introduced version="4.6.3">Introduced</introduced>
		<deprecated version=""></deprecated>
		<removed version=""></removed>
		<changed version="4.6.4">Added support for multi-part-encoding.</changed>
	</history>

	<objects>
	</objects>

	<platforms>
		<mac/>
		<windows/>
		<linux/>
	</platforms>

	<classes>
		<server/>
	</classes>

	<security>
	</security>


	<classification>
	</classification>

	<references>
		<keyword tag="$_SERVER">$_SERVER Keyword</keyword>
		<keyword tag="$_GET">$_GET Keyword</keyword>
		<keyword tag="$_GET_BINARY">$_GET_BINARY Keyword</keyword>
		<keyword tag="$_GET_RAW">$_GET_RAW Keyword</keyword>
		<keyword tag="$_POST">$_POST keyword</keyword>
		<keyword tag="$_POST_RAW">$_POST_RAW keyword</keyword>
	</references>

	<description>
	<overview>Use the <b>$_POST_BINARY</b> keyword to access posted form data. It is an array formed from reading stdin and translating the data.  <b>$_POST_BINARY</b> is identical to $_POST except that it does not perform any character set translation.<p></p><p><b>$_POST_BINARY</b> is only available when running in CGI mode (Server).</p></overview>

		<parameters>
		</parameters>

	<value></value>
	<comments>If the data is not url-form-encoded or multi-part-encoded then the result is empty.<p>The <b>$_POST_BINARY</b> keyword supports multi dimensional arrays.</p></comments>
	</description>
</doc>