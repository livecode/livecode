<doc>
  <legacy_id>2513</legacy_id>
  <name>ftp</name>
  <type>keyword</type>
  <syntax>
  </syntax>
  <library>Internet library</library>
  <objects>
  </objects>
  <synonyms>
  </synonyms>
  <classification>
    <category>Networks &amp; Communication</category>
    <category>Standalone Applications</category>
  </classification>
  <references>
    <command tag="libURLDownloadToFile">libURLDownloadToFile Command</command>
    <command tag="libURLftpUpload">libURLftpUpload Command</command>
    <command tag="libURLSetFTPListCommand">libURLSetFTPListCommand Command</command>
    <command tag="libURLSetFTPMode">libURLSetFTPMode Command</command>
    <command tag="delete URL">delete URL Command</command>
    <function tag="libURLErrorData">libURLErrorData Function</function>
  </references>
  <history>
    <introduced version="1.1">Added.</introduced>
    <changed version="2.0"></changed>
  </history>
  <platforms>
    <mac/>
    <windows/>
    <linux/>
    <ios/>
    <android/>
  </platforms>
  <classes>
    <desktop/>
    <server/>
    <web/>
    <mobile/>
  </classes>
  <security>
    <network/>
  </security>
  <summary>Used as a <keyword tag="URL">URL</keyword> type with such <glossary tag="command">commands</glossary> as <command tag="put">put</command> and <command tag="get">get</command> to designate a <keyword tag="file">file</keyword> or <property tag="defaultFolder">directory</property> on an FTP <glossary tag="server">server</glossary>.</summary>
  <examples>
    <example>put URL "ftp://ftp.example.com/public/" into filesList</example>
    <example>get URL "ftp://john:passwd@ftp.example.net:2121/picture.jpg"</example>
    <example>put URL "ftp://files.example.org/file.txt" into URL "file:myFile.txt"</example>
    <example>put field "Upload" into URL "ftp://me:secret@ftp.example.net/file.txt"</example>
  </examples>
  <description>
    <p>Use the <b>ftp</b> <glossary tag="keyword">keyword</glossary> to upload or download <function tag="files">files</function> to or from an Internet site.</p><p/><p><b>Comments:</b></p><p>The URL scheme "ftp" indicates information located on an FTP server. An <b>ftp</b> <keyword tag="URL">URL</keyword> consists of the following parts:</p><p/><p>        1. The string "ftp://"</p><p>        2. An optional user name and password, separated by a colon (:) and followed by "@"</p><p>        3. The name of the server</p><p>        4. An optional port number preceded by a colon (:)</p><p>        5. The name and location of a file or directory, starting with a slash (/)</p><p/><p>If you don't specify a port number, port 21 is used. (This is the standard port for FTP.)</p><p/><p><b>Note:</b> Most public FTP <glossary tag="server">servers</glossary> do not require a user name and password. For such <glossary tag="server">servers</glossary>, you need not specify any user name or password. If you don't specify a user name or password, LiveCode adds the "anonymous" user name and a dummy password automatically, in accordance with the conventions for public FTP <glossary tag="server">servers</glossary>.</p><p/><p><img src="202653"/> <b>Important!</b> If your user name or password contains any of the characters ":", "@", "/", ".", or "|", use the <b>URLEncode</b> <control_st tag="function">function</control_st> to safely encode the user name or password before putting them into the <keyword tag="URL">URL</keyword>. The following example constructs a <keyword tag="URL">URL</keyword> for a user whose password contains the "@" character:</p><p/><p>        put "jim" into userName</p><p>        put "jsmith@example.org" into userPassword</p><p>        put "ftp://" &amp; userName &amp; ":" &amp; URLEncode(userPassword) \</p><p>            &amp; "@ftp.example.com/title.txt" into fileURLToGet</p><p>        get URL fileURLToGet</p><p/><p>Here are some examples of valid <b>ftp</b> <glossary tag="URL">URLs</glossary>:</p><p/><p>        ftp://ftp.example.org/directory/ -- list of files and folders in a directory</p><p>        ftp://ftp.example.org/directory/file.exe -- a file on the server</p><p>        ftp://user:password@ftp.example.org/myfile -- a file accessed by a password</p><p>        ftp://ftp.example.com:3992/somefile -- using a nonstandard FTP port</p><p/><p>An <b>ftp</b> <keyword tag="URL">URL</keyword> is a <glossary tag="container">container</glossary>, and you can use the <glossary tag="expression">expression</glossary> URL <i>ftpURL</i> in any statement where any other <glossary tag="container">container</glossary> type is used. When you get the <function tag="value">value</function> of an <keyword tag="ftp">ftp</keyword> <keyword tag="URL">URL</keyword>, LiveCode <glossary tag="download">downloads</glossary> the <keyword tag="URL">URL</keyword> from the <glossary tag="server">server</glossary>. (If you have previously <glossary tag="cache">cached</glossary> the URL with the <command tag="load">load</command> <glossary tag="command">command</glossary>, it fetches the <keyword tag="URL">URL</keyword> from the <glossary tag="cache">cache</glossary>.)</p><p/><p>A URL that ends with a slash (/) designates a directory (rather than a file). An <b>ftp</b> <keyword tag="URL">URL</keyword> to a <property tag="defaultFolder">directory</property> evaluates to a listing of the <glossary tag="folder">directory's</glossary> contents. To change the format of <property tag="defaultFolder">directory</property> listings, use the <command tag="libURLSetFTPListCommand">libURLSetFTPListCommand</command> command.</p><p/><p>If an error occurs during transfer of the data, the error is placed in the <b>result</b> <control_st tag="function">function</control_st>. The first <keyword tag="word">word</keyword> returned by the <function tag="result">result</function> <control_st tag="function">function</control_st> is "error", followed (where appropriate) by the text of the error message returned by the FTP <glossary tag="server">server</glossary>, including the server response code.</p><p/><p>FTP uploads and downloads that are performed using the <b>ftp</b> <glossary tag="keyword">keyword</glossary> are always transferred in binary mode:  no character translation is performed. If you need to translate characters--for example, if you are uploading a <glossary tag="text file">text file</glossary> to a different operating system and want to translate line endings--you must do so before uploading the <keyword tag="file">file</keyword>, since the <command tag="put">put</command> <glossary tag="command">command</glossary> will not do it for you.</p><p/><p><b>Note:</b> <glossary tag="download">Downloading</glossary> a <keyword tag="URL">URL</keyword> by using it in an <glossary tag="expression">expression</glossary> is a <glossary tag="blocking">blocking</glossary> operation: that is, the <glossary tag="handler">handler</glossary> pauses until LiveCode is finished getting the <keyword tag="URL">URL</keyword>. Since contacting a <glossary tag="server">server</glossary> may take some time due to network lag, <keyword tag="URL">URL</keyword> operations may take long enough to be noticeable, so you may want to set the cursor to the watch or otherwise indicate a delay to the user.</p><p/><p><img src="202653"/> <b>Important!</b> If a <glossary tag="blocking">blocking</glossary> operation involving a <keyword tag="URL">URL</keyword> (using the <command tag="put">put</command> <glossary tag="command">command</glossary> to <glossary tag="upload">upload</glossary> a <keyword tag="URL">URL</keyword>, the <command tag="post">post</command> <glossary tag="command">command</glossary>, the <command tag="delete URL">delete URL</command> <glossary tag="command">command</glossary>, or a <glossary tag="statement">statement</glossary> that gets an <keyword tag="ftp">ftp</keyword> or <keyword tag="http">http</keyword> <keyword tag="URL">URL</keyword>) is going on, no other <glossary tag="blocking">blocking</glossary> <keyword tag="URL">URL</keyword> operation can start until the previous one is finished. If you attempt to use a <keyword tag="URL">URL</keyword> in an <glossary tag="expression">expression</glossary>, or put data into a <keyword tag="URL">URL</keyword>, while another <glossary tag="blocking">blocking</glossary> <keyword tag="URL">URL</keyword> operation is in progress, the <function tag="result">result</function> is set to "Error Previous request not completed".</p><p/><p>Downloading a URL does not prevent other messages from being sent during the download: the current handler is blocked during the download, but other handlers are not. This means that if, for example, your application has a button that downloads a URL, the user might click the button again (or click another <keyword tag="button">button</keyword> that <glossary tag="download">downloads</glossary> another <keyword tag="URL">URL</keyword>) while the first <keyword tag="URL">URL</keyword> is still being <glossary tag="download">downloaded</glossary>. In this case, the second <glossary tag="download">download</glossary> is not performed and the <function tag="result">result</function> is set to "Error Previous request not completed." To avoid this problem, you can set a <glossary tag="flag">flag</glossary> while a URL is being <glossary tag="download">downloaded</glossary>, and check that <glossary tag="flag">flag</glossary> when trying to <glossary tag="download">download</glossary> <glossary tag="URL">URLs</glossary> to make sure that there is not already a current <glossary tag="download">download</glossary> in progress.</p><p/><p>The following example shows how to set a flag in a global variable to prevent multiple downloads. The variable "downloadInProgress" is set to true while a download is going on, and back to false when the download concludes. If the user clicks the button again while the download is still going on, the handler simply beeps:</p><p/><p>  on mouseUp</p><p>    global downloadInProgress</p><p>    if downloadInProgress then</p><p>      beep</p><p>      exit mouseUp</p><p>    end if</p><p>    put true into downloadInProgress -- about to start</p><p>    put URL (field "FTP URL to get") into field "Command Result"</p><p>    put false into downloadInProgress -- finished</p><p>  end mouseUp</p><p/><p>To send any FTP command to an FTP server, use the <b>libURLftpCommand</b> <control_st tag="function">function</control_st>.</p><p/><p>For technical information about URLs and the <b>ftp</b> <keyword tag="URL">URL</keyword> scheme, see RFC 1630 at &lt;<u>http://www.ietf.org/rfc/rfc1630.txt</u>&gt;.</p><p/><p><img src="202653"/> <b>Important!</b> The <b>ftp</b> <glossary tag="keyword">keyword</glossary> is part of the <glossary tag="Internet library">Internet library</glossary>. To ensure that the <glossary tag="keyword">keyword</glossary> works in a <glossary tag="standalone application">standalone application</glossary>, you must include this <glossary tag="LiveCode custom library">custom library</glossary> when you create your <glossary tag="standalone application">standalone</glossary>. In the Inclusions section of the <glossary tag="Standalone Application Settings">Standalone Application Settings</glossary> window, make sure "Internet Library" is selected in the list of script libraries.</p><p/><p><b>Note:</b> When included in a <glossary tag="standalone application">standalone application</glossary>, the <glossary tag="Internet library">Internet library</glossary> is implemented as a hidden <command tag="group">group</command> and made available when the <command tag="group">group</command> receives its first <message tag="openBackground">openBackground</message> message. During the first part of the <glossary tag="application">application's</glossary> startup process, before this <keyword tag="message box">message</keyword> is sent, the <keyword tag="ftp">ftp</keyword> <glossary tag="keyword">keyword</glossary> is not yet available. This may affect attempts to use this <glossary tag="keyword">keyword</glossary> in <message tag="startup">startup</message>, <message tag="preOpenStack">preOpenStack</message>, <message tag="openStack">openStack</message>, or <message tag="preOpenCard">preOpenCard</message> <glossary tag="handler">handlers</glossary> in the <glossary tag="main stack">main stack</glossary>. Once the <glossary tag="application">application</glossary> has finished starting up, the <command tag="start using">library</command> is available and the <keyword tag="ftp">ftp</keyword> <glossary tag="keyword">keyword</glossary> can be used in any <glossary tag="handler">handler</glossary>.</p><p/><p><b>Changes:</b></p><p>The ability to specify a port number was added in version 2.0. In previous versions, port 21 was always used for FTP transactions.</p>
  </description>
</doc>