<doc>
  <legacy_id>1438</legacy_id>
  <name>()</name>
  <type>operator</type>
  <syntax>
    <example>(<i>expression</i>)</example>
  </syntax>
  <library></library>
  <objects>
  </objects>
  <synonyms>
  </synonyms>
  <classification>
    <category>Math, Logic, &amp; Dates</category>
  </classification>
  <references>
    <function tag="value">value Function</function>
    <keyword tag="[]">[] Keyword</keyword>
    <operator tag="*">* Operator</operator>
    <operator tag="+">+ Operator</operator>
    <operator tag="-">- Operator</operator>
  </references>
  <history>
    <introduced version="1.0">Added.</introduced>
  </history>
  <platforms>
    <mac/>
    <windows/>
    <linux/>
    <ios/>
    <android/>
  </platforms>
  <classes>
    <desktop/>
    <server/>
    <web/>
    <mobile/>
  </classes>
  <security>
  </security>
  <summary><glossary tag="group">Groups</glossary> <glossary tag="operand">operands</glossary> together.</summary>
  <examples>
    <example>get (quantity * priceEach) + shippingCost</example>
    <example>("a" is within field 1) or ("b" is within field 2)</example>
    <example>23 * ((4 / 17) + 60) + (- 7)</example>
  </examples>
  <description>
    <p>Use parentheses <b>( )</b> to group <glossary tag="operand">operands</glossary> together in order to control the order <glossary tag="operation">operations</glossary> are performed in, or to make the <glossary tag="control structure">structure</glossary> of a complex <glossary tag="expression">expression</glossary> clearer.</p><p/><p><b>Parameters:</b></p><p>The <i>expression</i> is any <glossary tag="LiveCode">LiveCode</glossary> <glossary tag="expression">expression</glossary>.</p><p/><p><b>Comments:</b></p><p>When LiveCode evaluates an expression, operations enclosed within parentheses are performed first. If parentheses are nested, the expression within the innermost set of parentheses is evaluated first.</p><p/><p>For example, the <b>sin</b> <control_st tag="function">function</control_st> is <glossary tag="evaluate">evaluated</glossary> before the <code>/</code> <glossary tag="operator">operator</glossary>, so<code> the sin of 1/4 </code>means "take the sine of one, then divide by four". To obtain the sine of 1/4, use parentheses to force the division to be done first, as in this expression:<code> the sin of (1/4)</code>.</p><p/><p>Even when they are not needed to change operator precedence, parentheses are useful in making complex expressions more readable. For example,</p><p><code/>  (quantity * priceEach) + (shippingCost * weight)</p><p>evaluates to the same number as</p><p><code>  quantity * priceEach + shippingCost * weight</code></p><p>But the first example is easier to understand,  because the parentheses break down the expression logically for the reader.</p><p/><p>Parentheses in expressions must be used in pairs, each <b>(</b> with a matching <b>)</b>. Use of <glossary tag="matched">unmatched</glossary> parentheses will cause a <glossary tag="compile error">compile error</glossary>.</p>
  </description>
</doc>