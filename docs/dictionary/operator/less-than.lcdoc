Name: &lt;

Type: operator

Syntax: <value1> &lt; <value2> 

Summary: Compares two <value(glossary)|values> and <return|returns> true if the first <value(function)> is less than the second <value(function)>, false otherwise.

Introduced: 1.0

OS: mac,windows,linux,ios,android

Platforms: desktop,server,web,mobile

Example:
3 &lt; 4 -- evaluates to true

Example:
7 &lt; (2 + 1) -- evaluates to false

Example:
if thisVariable &lt; 0 then beep

Parameters:
value1: The operands value1 and value2 can be numbers, literal strings of characters (delimited with double quotes), or any sources of value.
value2: 

Description:
Use the <&lt;> (less than) <operator> to compare two numbers or to compare the alphabetical order of two <string(glossary)|strings>.

When comparing strings, the  <operator> compares the two <value(glossary)|values> <character> by <character>, using the <ASCII|ASCII value> of each <character>. For example, "a" comes before "b" in the <ASCII> <character set>, so "a" &lt; "b" and "ab" &lt; "bb".

If the strings are of different lengths, so that the trailing characters in one <string(keyword)> are compared to missing <characters> in the other, the missing <characters> are considered to have lower <value(function)> than any <character>. For example, "ab" &lt; "abc".

If the two values are equal, firstValue  secondValue evaluates to false.

If the caseSensitive <property> is true, the comparison between two <string(glossary)|strings> treats uppercase letters as coming before lowercase letters, so "A" &lt; "a". If the caseSensitive <property> is false, the comparison is not <case-sensitive>, so "a" is considered equivalent to "A".

References: string (keyword), character (keyword), characters (keyword), &lt;&gt; (operator), &lt;= (operator), &gt; (operator), min (function), value (function), property (glossary), ASCII (glossary), value (glossary), return (glossary), operator (glossary), string (glossary), character set (glossary), case-sensitive (glossary)

Tags: math
