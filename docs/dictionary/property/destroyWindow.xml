<doc>
  <legacy_id>1815</legacy_id>
  <name>destroyWindow</name>
  <type>property</type>
  <syntax>
    <example>set the destroyWindow of <i>stack</i> to {true | false}</example>
  </syntax>
  <library></library>
  <objects>
    <stack/>
  </objects>
  <synonyms>
  </synonyms>
  <classification>
    <category>Objects &amp; Messages</category>
    <category>Windows &amp; Dialog Boxes</category>
  </classification>
  <references>
    <message tag="deleteStack">deleteStack Message</message>
    <property tag="externalPackages">externalPackages Property</property>
  </references>
  <history>
    <introduced version="1.0">Added.</introduced>
  </history>
  <platforms>
    <mac/>
    <windows/>
    <linux/>
  </platforms>
  <classes>
    <desktop/>
    <server/>
    <web/>
  </classes>
  <security>
  </security>
  <summary>Specifies whether the memory used by a <glossary tag="stack window">stack window</glossary> is purged when the <object tag="stack">stack</object> is closed.</summary>
  <examples>
    <example>set the destroyWindow of stack "Test Harness" to true</example>
  </examples>
  <description>
    <p>Use the <b>destroyWindow</b> <glossary tag="property">property</glossary> when installing new <property tag="externals">externals</property>, or to save memory.</p><p/><p><b>Value:</b></p><p>The <b>destroyWindow</b> of a stack is true or false.</p><p/><p>By default, the <b>destroyWindow</b> <glossary tag="property">property</glossary> of newly created <function tag="stacks">stacks</function> is set to false.</p><p/><p><b>Comments:</b></p><p>If a stack's <b>destroyWindow</b> <glossary tag="property">property</glossary> is set to true, closing the <object tag="stack">stack</object> removes the data structure maintaining that window.</p><p/><p>External commands and external functions are removed from memory only when the stack controlling them is removed from memory. When you install a new external, or replace it with a new version while debugging, LiveCode cannot use it until you either quit LiveCode and then reopen the stack, or close the stack (after setting its <b>destroyWindow</b> to true) and then reopen it.</p><p/><p><code/><b>Note:</b><code/> Despite its alarming name, the <b>destroyWindow</b> <glossary tag="property">property</glossary> does not destroy or damage a <object tag="stack">stack</object>. It simply frees the memory used for its window.</p>
  </description>
</doc>