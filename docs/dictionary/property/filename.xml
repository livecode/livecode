<doc>	<legacy_id>2287</legacy_id>	<name>filename</name>	<type>property</type>	<syntax>		<example>set the filename of {<i>image</i> |<i> player</i>} to {<i>filePath</i> | <i>URL</i>}</example>	</syntax>	<synonyms>	</synonyms>	<summary>Specifies the <keyword tag="file">file</keyword> associated with a <keyword tag="player">player</keyword> or <keyword tag="image">image</keyword>.   </summary>	<examples><example>set the filename of image &quot;Animation&quot; to &quot;/HD/Projects/blipvert.gif&quot;</example><example>set the filename of last player to &quot;http://www.example.com/myMovie.mov&quot;</example>	</examples>	<history>		<introduced version="1.0">Added.   </introduced>		<deprecated version=""></deprecated>		<removed version=""></removed>		<changed version="6.5">6.5</changed>	</history>	<objects>		<player/>		<image/>	</objects>	<platforms>		<mac/>		<windows/>		<linux/>		<ios/>		<android/>	</platforms>	<classes>		<desktop/>		<server/>		<web/>		<mobile/>	</classes>	<security>	</security>	<classification>		<category>Images &amp; Multimedia</category>		<category>Files, Folders, &amp; Resources</category>	</classification>	<references>		<function tag="shortFilePath">shortFilePath Function</function>		<function tag="tempName">tempName Function</function>		<command tag="import">import Command</command>		<property tag="fileType">fileType Property</property>		<property tag="constantMask">constantMask Property</property>		<message tag="saveStackRequest">saveStackRequest Message</message>	</references>	<description>	<overview>Use the <b>filename</b> <glossary tag="property">property</glossary> to reference a separate <keyword tag="file">file</keyword> that holds the data for an <keyword tag="image">image</keyword> or <keyword tag="player">player</keyword> that&apos;s a <glossary tag="referenced control">referenced control</glossary>. </overview>		<parameters>		</parameters>	<value>The <b>filename</b> of an <keyword tag="image">image</keyword> or <keyword tag="player">player</keyword> specifies either a <glossary tag="file path">file path</glossary> or a <keyword tag="URL">URL</keyword>. A <glossary tag="file path">file path</glossary> specifies the <glossary tag="file path">name and location</glossary> of the <keyword tag="file">file</keyword>. If you specify a name but not a location, LiveCode assumes the <keyword tag="file">file</keyword> or relative paths are from the <property tag="defaultFolder">defaultFolder</property> or the folder the stack is saved in. A <keyword tag="URL">URL</keyword> specifies the name and location of a <keyword tag="file">file</keyword> on your system or anywhere on the <keyword tag="internet">Internet</keyword>. <p></p><p>By default, the <b>filename</b> <glossary tag="property">property</glossary> of newly created <glossary tag="image">images</glossary> and <glossary tag="player">players</glossary> is set to empty. </p></value>	<comments>The contents of an image can reside either in the stack or in a separate file. If an image&apos;s <b>filename</b> is empty, the <keyword tag="image">image</keyword> uses its own data, which resides in the <object tag="stack">stack</object>, instead of <glossary tag="load">loading</glossary> a separate file. (You can <command tag="import">import</command> an <keyword tag="image">image</keyword> with the <command tag="import">import</command> <glossary tag="command">command</glossary>, or paint an <keyword tag="image">image</keyword> with the <glossary tag="paint tool">paint tools</glossary>. ) Setting an <glossary tag="image">image&apos;s</glossary> <b>filename</b> <glossary tag="property">property</glossary> to the <glossary tag="file path">name and location</glossary> of a <keyword tag="file">file</keyword> deletes the previous contents of the <keyword tag="image">image</keyword>. <p></p><p>Using an image from a separate file reduces memory use, since the image does not need to be loaded into memory unless it is in use. But it increases the time it takes to go to a card containing the image, since the file must be loaded from the disk it&apos;s on or from the Internet. </p><p></p><p>The contents of a player must reside in a separate file that is specified in the player&apos;s <b>filename</b> <glossary tag="property">property</glossary>. If a <glossary tag="player">player&apos;s</glossary> <b>filename</b> is empty, the <keyword tag="player">player</keyword> does not display any data. The <keyword tag="file">file</keyword> specified by the <i>filePath</i> or <i>URL</i> must be in a <function tag="format">format</function> supported by <glossary tag="QuickTime">QuickTime</glossary>. </p><p></p><p> set the filename of player &quot;My Player&quot; to &quot;SecondMovie. mov&quot;</p><p> set the currentTime of player &quot;My Player&quot; to zero</p><p></p><p>If you specify a <i>URL</i> for a <glossary tag="streaming">streaming</glossary> <glossary tag="QuickTime">QuickTime</glossary> <glossary tag="movie">movie file</glossary>, LiveCode displays the <function tag="movie">movie</function> sequentially as it downloads. Otherwise, LiveCode must <glossary tag="download">download</glossary> the entire <keyword tag="file">file</keyword> before you can play it. To pre-fetch a <keyword tag="file">file</keyword> from the Internet in order to speed up access to it, use the <command tag="load">load</command> <glossary tag="command">command</glossary> before visiting the <keyword tag="card">card</keyword> that holds the <keyword tag="player">player</keyword> or <keyword tag="image">image</keyword> that references the <glossary tag="file">file&apos;s</glossary> <keyword tag="URL">URL</keyword>. </p><p></p><p>You can use the &quot;New Referenced Control&quot; submenu in the File menu to create a new image or player which references the contents of a file you specify. You can also set the <b>filename</b> to an <glossary tag="absolute file path">absolute path</glossary> or <glossary tag="relative file path">relative path</glossary> by changing the Source field in the <glossary tag="image">image&apos;s</glossary> or <glossary tag="player">player&apos;s</glossary> <glossary tag="property inspector">property inspector</glossary>.</p><p></p><p></p><p></p><change><p>The <i>URL</i> option was introduced in version 1.1. In previous versions, the <b>filename</b> of an <keyword tag="image">image</keyword> or <keyword tag="player">player</keyword> always specified a <glossary tag="file path">file path</glossary> on the <glossary tag="local file">local system</glossary>, and <function tag="files">files</function> on the <keyword tag="internet">Internet</keyword> could not be used. </change><p>&#9;</p><p></p><p></p><p></p><change><p>Support for Density Mapped Images was introduced in version 1.1. In previous versions, the <b>filename</b> of an <keyword tag="image">image</keyword> would only be able to use that particular image for display. Images with differing resolution are now supported, allowing applications to take full advantage of Hi-DPI.</p><p>To take full advantage of Hi-DPI, images must be provided at appropriate sizes for different densities. This can be done by having multiple image files in the same location named appropriately (with the image object referencing the image file at the natural density). The naming convention is as follows:</p><p>- <image>@ultra-low.<ex> - 0.25x</p><p>- <image>@extra-low.<ext> - 0.5x</p><p>- <image>@low.<ext> - 0.75x</p><p>- <image>@medium.<ext> / <image>.<ext> - 1x</p><p>- <image>@high.<ext> - 1.5x</p><p>- <image>@extra-high.<ext> / <image>@2x - 2x</p><p>- <image>@ultra-high.<ext> - 4x</p><p>When an image is required, the current scale factor is rounded up to the nearest standard density (one of 0.25, 0.5, 0.75, 1, 1.5, 2 and 4). The image with the lowest scale factor that is greater or equal to the nearest standard density is then selected. For example, if the scale factor is 1.75 and there is an extra-high image available, then that is used.</p><p>Images should be created at appropriately scaled pixel size. If the natural size of an image is x points wide and y points high, the scaled versions should be x scale pixels wide and y scale pixels high in order to have the same natural size. You should take care that the natural size of the image scales to integer pixel sizes, as the logical point size of the image is rounded up to the nearest integer. If this is not practical for a given image, you may need to design your apps to handle slightly different resulting image sizes.</p><p>        A useful rule of thumb is for images to have natural width and height values that are multiples of four, this way all the supported densities result in integer pixel sizes for each version of the image, and the resulting image has the same logical point size as all display densities.</p></change>		</comments>	</description></doc>