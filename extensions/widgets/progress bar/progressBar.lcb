/*Copyright (C) 2015 Runtime Revolution Ltd.This file is part of LiveCode.LiveCode is free software; you can redistribute it and/or modify it underthe terms of the GNU General Public License v3 as published by the FreeSoftware Foundation.LiveCode is distributed in the hope that it will be useful, but WITHOUT ANYWARRANTY; without even the implied warranty of MERCHANTABILITY orFITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public Licensefor more details.You should have received a copy of the GNU General Public Licensealong with LiveCode.  If not see <http://www.gnu.org/licenses/>.  */-- declaring extension as widget, followed by identifierwidget com.livecode.extensions.livecode.progressBar---- adding metadata to ensure extension displays correctly in livecodemetadata title is "Progress Bar"metadata author is "Georgia Hutchings"metadata version is "1.0.5"---- dependency declarationsuse com.livecode.canvasuse com.livecode.widget---- property declarationsproperty theme					get mTheme				set setThemeproperty thumbPosition			get mThumbPosition		set setThumbPositionproperty progress				get mProgress			set setProgress---- private instance variablesprivate variable mTheme 			as stringprivate variable mThumbPosition		as realprivate variable mProgress 			as realprivate variable mBarHeight 		as realprivate variable mProgressHeight 	as realprivate variable mShift 			as realprivate variable mColorWhite 		as Colorprivate variable mColorBlack 		as Colorprivate variable mTransparent 		as Colorprivate variable mColorMacBlue 		as Colorprivate variable mColorWinBlue		as Color-------------- called when the widget is createdpublic handler OnCreate()	put "macos-yosemite" into mTheme	put 0.0 into mThumbPosition	put 0.0 into mProgress		put 11.0 into mBarHeight	put 4.0 into mProgressHeight	put 0.0 into mShift		put color [1.0, 1.0, 1.0] into mColorWhite	put color [0.0, 0.0, 0.0] into mColorBlack	put color [1.0, 1.0, 1.0, 0.0] into mTransparent	put color [51/255, 153/255, 1.0] into mColorMacBlue	put color [62/255, 154/255, 215/255] into mColorWinBlue		if mTheme is "macos-10.0" then		schedule timer in 0.05 seconds	end ifend handler---------------------- called whenever LiveCode needs to redraw the widgetpublic handler OnPaint()		-- getting the thumb position	updateThumbPosition()		-- draw the rounded rectangle and fill with paint	variable tBarPath as Path	put getBarPath() into tBarPath	set the paint of this canvas to getBarPaint()	fill tBarPath on this canvas	--		-- draw the progress bar (background progress bar for yosemite)	set the paint of this canvas to getProgressPaint()	fill getProgressPath() on this canvas		-- draw a straight line at the end of the progress bar for macos	if mTheme is "macos-10.0" or mTheme is "macos-yosemite" and mProgress is not 0.0 then		set the stroke width of this canvas to getStrokeWidth() 		set the paint of this canvas to solid paint with getProgressStrokeColor()		stroke getStrokePath() on this canvas	end if	--		-- draw the progress bar for macos-yosemite	if mTheme is "macos-yosemite" and mProgress is not 0.0 then			set the paint of this canvas to getYosemiteProgressPaint()		fill getYosemiteProgressPath() on this canvas	end if	--		-- draw the border by stroking the bar	set the stroke width of this canvas to 0.9	set the paint of this canvas to solid paint with getStrokeColor()	stroke tBarPath on this canvas	--	end handler---------------------- this handler is called when the timer scheduled with 'schedule timer' firespublic handler OnTimer()	add 1.0 to mShift	redraw all	schedule timer in 0.05 secondsend handler---------------------- this handler sets the theme of the widgetpublic handler setTheme(in pTheme as string)	put pTheme into mTheme	redraw allend handler---------------------- this handler sets the thumb position of the progress bar-- pProgress should be a number between 0 and 100 (a percentage)public handler setThumbPosition(in pProgress as real) as undefined		if mTheme is "macos-yosemite" then		put (pProgress/100)*(my width - 4) + 2 into mThumbPosition	else		put (pProgress/100)*(my width) into mThumbPosition	end if		redraw allend handler---------------------- this handler sets the progress -- pProgress should be a number between 0 and 100 (a percentage)public handler setProgress(in pProgress as real) as undefined	put pProgress into mProgress	redraw allend handler---------------------- this handler returns the path for the empty barprivate handler getBarPath()	if mTheme is "macos-10.0" then		return rounded rectangle path of rectangle [0, 0, my width, mBarHeight] with radius 2.5			else if mTheme is "macos-yosemite" then		return rectangle path of rectangle [0, 0, my width, mBarHeight]			else if mTheme is "windows-8" then		return rectangle path of rectangle [0, mBarHeight/4, my width, 3*mBarHeight/4]	end if	end handler---------------------- this handler returns the path for the progress bar (background progress path for yosemite)private handler getProgressPath() as Path	if mTheme is "macos-10.0" then		return rounded rectangle path of rectangle [0, 0, mThumbPosition, mBarHeight] with radius 2.5			else if mTheme is "macos-yosemite" then		return rounded rectangle path of rectangle [2, mBarHeight/2 - mProgressHeight/2, my width - 2, mBarHeight/2 + mProgressHeight/2] with radius 10		else if mTheme is "windows-8" then 		return rectangle path of rectangle [0, mBarHeight/4, mThumbPosition, 3*mBarHeight/4]		end ifend handler---------------------- this handler returns the paint for the empty barprivate handler getBarPaint() as Paint	variable tPaint as Paint		if mTheme is "macos-10.0" then		variable tStop1		variable tStop2		variable tStop3				put gradient stop at 0 with color [160/255, 160/255, 160/255, 0.5] into tStop1		put gradient stop at (mBarHeight/2)/(my height) with color [160/255, 160/255, 160/255, 0.3] into tStop2		put gradient stop at mBarHeight/(my height) with color [160/255, 160/255, 160/255, 0.2] into tStop3				put linear gradient with ramp [tStop1, tStop2, tStop3] into tPaint		scale tPaint by [my height, my width]		rotate tPaint by 90			else if mTheme is "macos-yosemite" then		put solid paint with color [224/255, 224/255, 224/255, 0.75] into tPaint			else if mTheme is "windows-8" then		put solid paint with color [192/255, 192/255, 192/255, 0.75] into tPaint	end if		return tPaintend handler---------------------- this handler returns the paint for the progressprivate handler getProgressPaint() as Paint	variable tPaint as Paint		if mTheme is "macos-10.0" then		variable tImage as Image		variable tFile as string				if mThumbPosition is my width then						put "/Users/georgia/Desktop/Progress Bar Widget/scrollbar complete.png" into tFile			put image from file tFile into tImage 			put pattern with tImage into tPaint			scale tPaint by [my width, 0.9]					else			put "/Users/georgia/Desktop/Progress Bar Widget/scrollbar.png" into tFile			put image from file tFile into tImage			put pattern with tImage into tPaint			translate tPaint by [-mShift,0]					end if			else if mTheme is "macos-yosemite" then		put solid paint with color [192/255, 192/255, 192/255, 0.75] into tPaint			else if mTheme is "windows-8" then		put solid paint with mColorWinBlue into tPaint	end if	return tPaintend handler---------------------- this handler returns the color of the strokeprivate handler getStrokeColor() as Color	if mTheme is "macos-10.0" then		return color [128/255, 128/255, 128/255]	else if mTheme is "macos-yosemite" then		return mTransparent	else if mTheme is "windows-8" then		return mTransparent	end ifend handler---------------------- the following handlers draw straight lines at the end of the mac progress barsprivate handler getStrokeWidth() as real	if mTheme is "macos-10.0" then		return 0.5	else if mTheme is "macos-yosemite" then		return 2	end if end handlerprivate handler getProgressStrokeColor() as Color	if mTheme is "macos-10.0" then		return color [128/255, 128/255, 128/255]	else if mTheme is "macos-yosemite" then		return mColorMacBlue	end if end handlerprivate handler getStrokePath() as Path	if mTheme is "macos-10.0" then		return line path from point [mThumbPosition, 0] to point [mThumbPosition, mBarHeight]	else if mTheme is "macos-yosemite" then		return line path from point [mThumbPosition, mBarHeight/2 - mProgressHeight/2] to point [mThumbPosition, mBarHeight/2 + mProgressHeight/2]	end ifend handler---------------------- the following handlers draw the progress bar for macos-yosemiteprivate handler getYosemiteProgressPath() as optional Path	return rounded rectangle path of rectangle [2, mBarHeight/2 - mProgressHeight/2, mThumbPosition, mBarHeight/2 + mProgressHeight/2] with radius 10	end handlerprivate handler getYosemiteProgressPaint() as Paint	return solid paint with mColorMacBlueend handler---------------------- this handler updates the value of the thumb positionprivate handler updateThumbPosition() as undefined	if mTheme is "macos-yosemite" then		put (mProgress/100)*(my width - 4) + 2 into mThumbPosition	else		put (mProgress/100)*(my width) into mThumbPosition	end ifend handler----------end widget