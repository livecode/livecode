/*
Copyright (C) 2015 Runtime Revolution Ltd.

This file is part of LiveCode.

LiveCode is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License v3 as published by the Free
Software Foundation.

LiveCode is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License
along with LiveCode.  If not see <http://www.gnu.org/licenses/>.  */

module com.livecode.foreign.tests

use com.livecode.__INTERNAL._testlib

handler TestByteWithCode_Negative()
	return the byte with code -1
end handler
handler TestByteWithCode_Overflow()
	return the byte with code 256
end handler
public handler TestByteWithCode()
	variable t
	put the byte with code 0 into t

	test "code->byte" when the number of bytes in t is 1

	MCUnitTestHandlerThrows(TestByteWithCode_Negative, "code->byte (negative)")
	MCUnitTestHandlerThrows(TestByteWithCode_Overflow, "code->byte (overflow)")
end handler

handler TestCodeOfByte_Long()
	variable t
	put the byte with code 0 into t
	put t after t
	return the code of t
end handler
handler TestCodeOfByte_Empty()
	variable t
	put the empty data into t
	return the code of t
end handler
public handler TestCodeOfByte()
	test "byte->code" when the code of (the byte with code 1) is 1

	MCUnitTestHandlerThrows(TestCodeOfByte_Long, "byte->code (multibyte)")
	MCUnitTestHandlerThrows(TestCodeOfByte_Empty, "byte->code (empty)")
end handler

end module
