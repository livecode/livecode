/*
Copyright (C) 2015 Runtime Revolution Ltd.

This file is part of LiveCode.

LiveCode is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License v3 as published by the Free
Software Foundation.

LiveCode is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License
along with LiveCode.  If not see <http://www.gnu.org/licenses/>.  */

module com.livecode.string.tests

use com.livecode.string

public handler TestPutBefore()
	variable t
	put "y" into t
	put "x" before t
	test "put before" when t is "xy"
end handler

public handler TestPutAfter()
	variable t
	put "x" into t
	put "y" after t
	test "put after" when t is "xy"
end handler

public handler TestReplace()
	variable t

	put "x.x" into t
	replace "." with "x" in t
	test "replace (single instance)" when t is "xxx"

	put "..." into t
	replace "." with "x" in t
	test "replace (multiple instance)" when t is "xxx"

	put ".xx" into t
	replace ".x" with "x" in t
	test "replace (multichar)" when t is "xx"

	put ".xx" into t
	replace ".x" with "." in t
	test "replace (multichar non-recursing)" when t is ".x"
end handler

public handler TestConcat()
	test "concat" when "x" & "y" is "xy"
	test "concat (space)" when "x" && "y" is "x y"
end handler

public handler TestUpper()
	test "uppercase" when the upper of "xY" is "XY"
	test diagnostic "TODO test some Unicode corner cases"
end handler

public handler TestLower()
	test "lowercase" when the lower of "xY" is "xy"
	test diagnostic "TODO test some Unicode corner cases"
end handler

public handler TestEquality()
	test "equality" when "xy" is "xy"
	test "equality (case sensitive)" when "xY" is not "xy"
	test diagnostic "TODO case sensitivity options"
end handler

public handler TestCompare()
	test "compare" when "X" < "y"
	test "compare (case sensitive)" when "x" > "Y"
	test "compare (empty)" when "" < "x"
end handler

public handler TestEmpty()
	test "empty (syntax)" when "" is the empty string
	test "empty (predicate)" when "" is empty
end handler

end module
