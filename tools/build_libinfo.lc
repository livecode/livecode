#! /usr/bin/revolution -ui

on startup
  local tSpec
  read from stdin until eof
  put it into tSpec

  local tName
  put $1 into tName

  local tSymbolExterns, tSymbolEntries
  repeat for each line tLine in tSpec
    if word 1 to -1 of tLine is empty then
      next repeat
    end if

    if char 1 of word 1 of tLine is "#" then
      next repeat
    end if

    if char 1 of tLine is not tab then
      next repeat
    end if

    if word 1 to -1 of (char 2 to -1 of tLine) is empty then
      next repeat
    end if

    local tEntry
    put word 1 to -1 of (char 2 to -1 of tLine) into tEntry

    local tSymbol
    if word 1 of tEntry is "?" then
      put word 2 of tEntry into tSymbol
    else
      put word 1 of tEntry into tSymbol
    end if

    if char -1 of tSymbol is ":" then
      delete char -1 of tSymbol
    end if

    put format("extern \"C\" void *%s;", tSymbol) & return after tSymbolExterns
    put format("    { \"%s\", &%s },", tSymbol, tSymbol) & return after tSymbolEntries

  end repeat

  write tSymbolExterns to stdout
  output "extern" && quote & "C" & quote && "{"
  output "struct LibExport { const char *name; void *address; };"
  output "struct LibInfo { const char **name; struct LibExport *exports; };"
  output "static const char *__libexternalname =" && quote & tName & quote & ";"
  output "static struct LibExport __libexports[] ="
  output "{"
  write tSymbolEntries to stdout
  output "  { 0, 0 }"
  output "};"
  output "static struct LibInfo __libinfo="
  output "{"
  output "    &__libexternalname,"
  output "    __libexports"
  output "};"
  output "__attribute((section(" & quote & "__DATA,__libs" & quote & "))) volatile struct LibInfo *__libinfoptr_" & tName & " = &__libinfo;"
  output "};"
end startup

on output pLine
  write pLine & return to stdout
end output
